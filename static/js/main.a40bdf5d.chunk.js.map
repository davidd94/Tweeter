{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetsFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a40bdf5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  const csrftoken = getCookie('csrftoken');\n  xhr.open(method, url)\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n  if (csrftoken){\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  \n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      const detail = xhr.response.detail;\n      if (detail === \"Authentication credentials were not provided.\") {\n        if (window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\";\n        }\n      };\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback){\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n  }\n\nexport function apiTweetAction(tweetId, action, callback){\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint =  \"/tweets/feed/\"\n\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint =  \"/tweets/\"\n    if (username){\n        endpoint =  `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\");\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}","import React from 'react'\n\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) =>{\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction){\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n        \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }","import React from 'react'\nimport {apiTweetCreate} from './lookup'\n\n\nexport function TweetCreate(props){\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n    const handleBackendUpdate = (response, status) =>{\n      if (status === 201){\n        didTweet(response)\n      } else {\n        console.log(response)\n        alert(\"An error occured please try again\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n      event.preventDefault()\n      const newVal = textAreaRef.current.value\n      // backend api request\n      apiTweetCreate(newVal, handleBackendUpdate)\n      textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n          <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\n\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n  </div>\n}","import React from 'react'\n\n\nexport function UserLink (props) {\n  const {username} = props;\n\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n    {props.children}\n  </span>\n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName, hideLink} = props;\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\n\n  return <React.Fragment>\n    {nameDisplay}{\" \"}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}\n\nexport function UserPicture (props) {\n  const {user, hideLink} = props;\n  const userIdSpan = <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">{user.username[0]}</span>\n\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>\n      {userIdSpan}\n    </UserLink>\n}","import React from 'react';\nimport numeral from 'numeral';\n\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}","import React, {useState, useEffect} from 'react';\n\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup';\nimport {UserDisplay, UserPicture} from './components';\nimport {DisplayCount} from './utils';\n\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props;\n    let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb;\n\n    const handleFollowToggle = (event) => {\n        event.preventDefault();\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb);\n        };\n    };\n    \n    return user ? <div>\n        <UserPicture user={user} hideLink />\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> followers</p>\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n    </div> : null;\n}\n\nexport function ProfileBadgeComponent (props) {\n    const {username} = props;\n    // lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false);\n\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setProfile(response)\n        }\n    }\n    useEffect(()=>{\n        if (didLookup === false){\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\n            if (status === 200) {\n                setProfile(response);\n            }\n            setProfileLoading(false);\n        });\n        setProfileLoading(true);\n    }\n\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null;\n}","import {backendLookup} from '../lookup';\n\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n}","\nimport React, {useState}  from 'react'\n\nimport {ActionBtn} from './buttons'\nimport {\n  UserDisplay,\n  UserPicture,\n} from '../profiles';\n\n\nexport function ParentTweet(props){\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\n  }\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\n    const path = window.location.pathname\n    const match = path.match(/(?<tweetid>\\d+)/)\n    const urlTweetId = match ? match.groups.tweetid : -1\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n    \n    const handleLink = (event) => {\n      event.preventDefault()\n      window.location.href = `/${tweet.id}`\n    }\n    const handlePerformAction = (newActionTweet, status) => {\n      if (status === 200){\n        setActionTweet(newActionTweet)\n      } else if (status === 201) {\n        if (didRetweet){\n          didRetweet(newActionTweet)\n        }\n      }\n      \n    }\n    \n    return <div className={className}>\n      {isRetweet === true && <div className=\"mb-2\"><span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span></div>}\n      <div className=\"d-flex\">\n        <div className=\"\">\n          <UserPicture user={tweet.user} />\n        </div>\n        <div className=\"col-11\">\n          <div>\n            <p>\n              <UserDisplay includeFullName user={tweet.user} />\n            </p>\n            <p>{tweet.content}</p>\n            <ParentTweet tweet={tweet} retweeter={tweet.user} />\n          </div>\n          <div className='btn btn-group px-0'>\n            {(actionTweet && hideActions !== true) && <React.Fragment>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\n                    <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\n                  </React.Fragment>\n            }\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n          </div>\n        </div>\n      </div>\n    </div>\n}\n  ","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetList} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault();\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            const newTweets = [...tweets].concat(response.results)\n            setNextUrl(response.next)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl);\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet  \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}\n","import React, {useEffect, useState}  from 'react'\n\nimport {apiTweetFeed} from './lookup'\n\nimport {Tweet} from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (tweetsDidSet === false){\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          }\n        }\n        apiTweetFeed(handleTweetListLookup)\n      }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n\n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault();\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            const newTweets = [...tweets].concat(response.results)\n            setNextUrl(response.next)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl);\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet  \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        className='my-5 py-5 border bg-white text-dark' \n        key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}","import React, {useEffect, useState}  from 'react'\n\nimport {TweetCreate} from './create'\nimport {Tweet} from './detail'\nimport {apiTweetDetail} from './lookup'\nimport {TweetsList} from './list'\nimport {FeedList} from './feed'\n\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) =>{\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n        <FeedList newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetsComponent(props) {\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n    const handleNewTweet = (newTweet) =>{\n      let tempNewTweets = [...newTweets]\n      tempNewTweets.unshift(newTweet)\n      setNewTweets(tempNewTweets)\n    }\n    return <div className={props.className}>\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n          <TweetsList newTweets={newTweets} {...props} />\n    </div>\n}\n\n\nexport function TweetDetailComponent(props){\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if (status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets';\nimport {ProfileBadgeComponent} from './profiles';\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetsFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetsFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetsFeedEl.dataset), tweetsFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), \n        container);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}